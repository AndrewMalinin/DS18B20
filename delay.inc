;***********************************************************************************
;Константы задержек

;.equ	t_1ms		=

;===================================================================================
;Задержка с периодом 1мкс (При тактовой частоте 20МГЦ)
delay_1us:						;3
	


	push	tmpL				;2
	pop 	tmpL				;2

	push	tmpL				;2
	pop 	tmpL				;2

	nop							;1
		                
	ret							;4  

;-----------------------------------------------------------------------------------
; Задержка с периодом 50мкс   нужно брать однобайтное число
delay_50us:							;3
				                    
	push	XL						;2
	push	XH						;2

	ldi		XL, low(0xF6)			;1
	ldi		XH, high(0xF6) 			;1

Delay_50us_loop:

	sbiw	x, 1					;2
	brne	Delay_50us_loop	 		;2 (1 - последний)

	pop		XH						;2
	pop		XL						;2

ret									;4

;-----------------------------------------------------------------------------------
; Задержка с периодом 100мкс

delay_100us:						;3
				                    
	push	XL						;2
	push	XH						;2

	ldi		XL, low(0x1F0)			;1
	ldi		XH, high(0x1F0) 		;1

Delay_100us_loop:

	sbiw	x, 1					;2
	brne	Delay_100us_loop	 	;2 (1 - последний)

	pop		XH						;2
	pop		XL						;2

	ret								;4

;-----------------------------------------------------------------------------------
;Задержка с периодом 1мс

delay_1ms:							;3
				                    
	push	XL						;2
	push	XH						;2

	ldi		XL, low(0x1384)			;1
	ldi		XH, high(0x1384) 		;1

Delay_1ms_loop:

	sbiw	x, 1					;2
	brne	Delay_1ms_loop	 		;2 (1 - последний)

	pop		XH						;2
	pop		XL						;2

	ret								;4

;-----------------------------------------------------------------------------------
;Задержка с периодом ram_delay мс. (максимум - 255мс)

delay_ms:

	lds		tmpL, ram_delay			;2

delay_ms_loop:
	rcall	delay_1ms				;4+20.000
	dec		tmpL					;1			
	brne	delay_ms_loop		 	;2 (1 - последний)
	
	ret								;4
;------------------------------------------------------------------------------------
; Задержка с периодом ram_delay мкс		(минимальная задержка - 2 микросекунды)
delay_us:							;3	150ns	|
									;			|
	lds		tmpL, ram_delay			;2	100ns	| для компенсации дополнительных действий вроде
	dec		tmpl					;1	50ns	| вызова функции и выхода - сделаем микросекунду
	nop								;1  50ns	| фиктивно вне цикла ( на самом деле получаем, что
	nop								;1	50ns	| нужна не микросекунда, а 850нс, т.к для загрузки
	nop								;1	50ns	| константы в память ОЗУ, необходимо 150нс
	push	tmpL					;2	100ns	|
	pop 	tmpL					;2	100ns	| Итог: 650нс +200 для ret

	delay_us_loop:

		push	tmpL				;2	100ns
		pop 	tmpL				;2	100ns
		push	tmpL				;2	100ns
		pop 	tmpL				;2	100ns
		push	tmpL				;2	100ns
		pop 	tmpL				;2	100ns
		push	tmpL				;2	100ns
		pop 	tmpL				;2	100ns
		nop							;1	50ns
		dec		tmpL				;1	50ns
	brne	delay_us_loop		;2	100ns (1 - последний)
	nop							;1	50ns (компенсация последней команды brne)

	ret								;4	200ns
;***********************************************************************************
